module test
{
    struct PrimitivesStruct
    {
        boolean my_bool;
        octet my_octet;
        char my_char;
        wchar my_wchar;
        long my_long;
        unsigned long my_ulong;
        int8 my_int8;
        uint8 my_uint8;
        short my_short;
        unsigned short my_ushort;
        long long my_longlong;
        unsigned long long my_ulonglong;
        float my_float;
        double my_double;
        long double my_longdouble;
    };

    struct StringsStruct
    {
        string my_string;
        wstring my_wstring;
        string<41925> my_bounded_string;
        wstring<20925> my_bounded_wstring;
    };    
    enum MyEnum
    {
        A,
        B,
        C
    };

    struct EnumStruct
    {
        MyEnum my_enum;
    };

    typedef MyEnum MyAliasedEnum;
    typedef string<100> MyAliasedBoundedString;
    typedef MyAliasedEnum MyRecursiveAlias;

    struct AliasStruct
    {
        MyAliasedEnum my_aliased_enum;
        MyAliasedBoundedString my_aliased_bounded_string;
        MyRecursiveAlias my_recursive_alias;
    };

    struct SequenceStruct
    {
        sequence<AliasStruct> bitmask_sequence;
        sequence<short, 5> short_sequence;
    };

    struct ArrayStruct
    {
        long long_array[2][3][4];
    };

    struct MapStruct
    {
        map<string, MyAliasedBoundedString> string_alias_unbounded_map;
        map<short, long, 2> short_long_map;
    };

    struct InnerStruct
    {
        @id(0x10) long first;
    };

    struct ParentStruct
    {
        float first;
        long long second;
    };

    struct ComplexStruct : ParentStruct
    {
        InnerStruct complex_member;
    };
};